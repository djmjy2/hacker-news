{"version":3,"sources":["src/core/router.ts","src/core/view.ts","src/core/api.ts","src/config.ts","src/page/news-detail-view.ts","src/page/news-feed-view.ts","src/page/index.ts","src/store.ts","src/app.ts"],"names":[],"mappings":";;;;;;AGAa,OAAA,CAAA,QAAA,GAAW,sCAAX;AACA,OAAA,CAAA,WAAA,GAAc,wCAAd;;;;;AKDb,IAAA,APA8B,QOA9B,GAAA,eAAA,CAAA,OAAA,CAAA,eAAA,CAAA,CAAA;APMI,AKLJ,IAAA,ACCa,YNIG,MKLhB,GAAA,ELKI,EAAiC,GKLrC,CAAA,ILKI,EAAiD,cKLrD,CAAA;AEAA,APKqD,AMAnD,ICLF,MAAA,GAAA,MDKE,CCLF,CAAA,QAAA,CAAA;AFAS,ACKP,MDLO,CAAA,cAAA,CAAA,OAAA,EAAA,gBAAA,EAAA;AECT,APKQ,AKNC,EAAA,EECT,IPKc,GOLd,CFDS,EECT,AFDS,IAAA,GECT,CAAA,EPK8B,GAAG,IOLjC,CAAA,GPKyC,CAAC,cAAT,CAAwB,WAAxB,CAAzB;AKNC,ACML,EDNK,GAAA,EAAA,ECMA,KAAL,GAAa,EAAb,GDNK;AEGT,APKQ,AKRC,ACOL,ICJE,ARDe,ICMT,COLD,APKE,AMDJ,EDPA,CEGK,IAAI,KDId,ECJc,CAAA,ADIM,CNChB,AMDJ,CDPK,CLQsB,AKRtB,EEGK,EAAd,cFHS,CAAA,CAAA,OAAA;AEKT,ARCE,ACGU,AKTI,ACQb,ICHG,MAAM,EPIM,COJK,IAAI,GRCzB,KQDyB,CAAA,OAAJ,EAAvB,MPIY;AOHZ,ARAE,ACIO,AKVA,CAAA,GEMH,YAAY,GAAG,IAAI,MAAA,CAAA,YAAJ,CAAiB,MAAjB,EAAyB,KAAzB,CAArB;AACA,IAAM,cAAc,GAAG,IAAI,MAAA,CAAA,cAAJ,CAAmB,MAAnB,EAA2B,KAA3B,CAAvB;AAEA,ARFI,ACKI,AKXR,INMI,AMNJ,EEQM,CAAC,EPGM,CDLH,CAAC,OCKH,EKXR,CEQA,APGyB,COHH,CFRtB,INMI,CAAwB,EMN5B,CAAA,GEQA,GPGQ,GDLJ,EAAsC,KAAK,EMN/C,CAAA,ENM0C,CAAW,IAAX,CAAgB,IAAhB,CAAtC,EADF,CACgE;AQIlE,APEQ,MOFF,CAAC,EPEM,AMHX,QNGM,EOFR,CAAoB,APEI,IMHP,ICCjB,APEQ,EOFsB,YAA9B;AACA,ARHI,ACKI,AKbC,ACUL,MCCE,AFXG,CEWF,AFXE,ENQA,ACKI,IMHF,KAAK,CCChB,ARHI,CQGgB,CFXX,CNQa,AMRb,CLaD,CDLJ,ECK0B,EOF9B,CFXS,CEWqB,ADD1B,CDVK,GLaD,UOFR,CFXS,EAAA;AEaT,ARJI,ACKI,AKdC,ACWN,EDXM,IEaH,CAAC,ERJE,ACKI,GODb,AFbS,EAAA,EEaO,CPCR,CKdC,ELce,CDLpB,CCKI,EDLgB,IAApB;AACD,ACKE,AKfI,EAAA,GAAA,EAAA,ECaP,aDbO,ACaS,IAAhB,EAA4B;ADbrB,ACcL,WDdK,ACcA,YAAL,GDdK,ACce,CDdf,GCcL,aDdK,CAAA,CAAA,OAAA;AAAO,ACeb;ADfM,CAAA,GJAI;AAIT,AGNJ,IAAA,MAAA,CLcE,ACKY,EInBd,EHMgB,GAAZ,EAAuB,QGN3B,CAAA,IJmBwB,EDLP,CKdjB,CAAA,ELcE,EAAyB,UKd3B,CAAA,CAAA;AHM2B,AFSvB,ACKI,SMDN,EPJO,ACKI,SAAL,CAAe,EDLnB,COIU,EPJU,ICKhB,GAA2B,KAAK,cAAhC;ADLkB,ACMlB,AIpBR,AEmBI,IFnBJ,ILc0B,CKd1B,EJoBa,CDNiB,AKd9B,CEmBW,CPLqB,EAAR,EOKR,CFnBhB,CAAA,KJoBQ,GAAsB,EMDnB,GNCwB,AIpBnC,AEmB+B,CFnB/B,AEmBI,ONCI;ACdF,AFQ8B,ACO/B,AMDF,QPNiC,CERzB,GAAL,AFQkC,EAAJ,CERnB,IAAI,cAAJ,EAAX;AACA,AFOkB,AIfxB,ACGA,IDHA,ACGA,GLYI,EEPO,CERX,EFQM,AGLN,CDHA,EFQiB,AGLjB,GHKM,IGLN,CAAA,KDHA,CAAA,KCGA,CAAA,CDHA,CAAA,cAAA,CAAA,CAAA;AFSK,AFOF;AIfH,ACIA,IDJA,ACIM,KDJN,AGsBE,ENCY,CGvBd,ACIc,ODJd,CAAA,IGsBc,INCQ,KGvBtB,CAAA,IHuBc,EAA0B,mrBInBxC;AJoBQ,AMDJ,WNCS,EMDF,KAAK,CNCR,CAAc,IAAd,CAAmB,KMDhB,GAAoB,CAApB,CNCH,EMD2B,KAAK,YAAL,GAAoB,CAA5C,GAAgD,CAAvD;ANEC,AGvBL,AGsBG,IHtBH,AC2BqB,OLZnB,CIfF,GAAA,OAAA,CAAA,UJee,CIff,CAAA,EJeE,EAA2B,IAA3B,EAAqC;AACnC,WERA,AFQK,UAAL,CAAgB,IAAhB,CAAqB,WERW,EAAhC,EAAgE;AAAA,AFQzC,AId3B,IAAM,IJcqB,IAAI,AIdjB,EJca,IAAF,ouBIdzB;AJciC,QAAA,COQ/B,ENCY,CDTuB,EAAJ,UOQf,MNCG;AChBf,AFOmB,ACUjB,AMDJ,IHIiB,GJbjB,GCUU,CCjBH,EKgBA,CLhBL,CAAS,GDiBO,AMDN,CLhBV,CAAc,CDiBK,EMDd,CAAW,CLhBhB,CDiBwB,CCjBH,GKgBvB,ELhB4B,EDiBP,CCjBnB,ADiBiC,IAAd,CAAmB,EAAnB,CAAjB;AChBF,AFOH,ACUK,AIIN,AELC,WLhBQ,ADiBE,GCjBP,CAAS,SDiBP,AIIM,GJNO,CAES,GCjBxB,CAA0B,GGqB9B,EAAiC,CHrB7B,EAAkC,EGqBtC,EAAiD,QHrBN;AACrC,AGoB2C,QHpB3C,EAAE,CAAC,IAAI,CAAC,KAAL,CAAW,KAAI,CAAC,GAAL,CAAS,QAApB,CAAD,CAAF;AACD,ADgBC,OClBF,MDkBS,QAAP;ACfF,ADgBD,AIE8C,SEHjD,ELfS,AFMT,GENI,CAAS,IAAT,KKeQ,IPTP;AELF,AFMD,AIWF,AGFE,UPTM,GOSC,KAAK,CPTG,GAAG,COSX,CAAW,EHER,IJXgB,AOSnB,CPToB,EOSA,CAA3B,CPTA,EIWF,EAAiC,KAAjC,EAAiD;AAAA,ACE/C,AEHD,8BFGO,WAAN,EAAmB,QAAnB;ALXA,UAAI,CCSM,QDTG,KAAK,EAAd,IAAoB,KAAK,CCSH,GAAhB,EAA6B,KAA7B,CDTV,CCSoD,CDTT;AACzC,ACSE,AGD2C,ACSjD,UAAA,CHxBE,ADgBS,EDTF,GKiBT,GAAS,MLjBL,ACSE,CDTgB,ECSM,EDTxB,CAAuB,AKiBY,EJRN,IDT7B,KEPkC,EAApC,EAAoE,CDgB1C,CAAoB,OAApB,eAAmC,GAAnC,WAA8C,KAA9C,CAAtB;ACfF,AFOD,ACSA,AIOoC,MHvBnC,IGuBM,CHvBD,AKeT,CLfU,EGuB6B,GHvBxB,GAAN,CAAL,CACG,IADH,CACQ,OKcD,GLdC,QAAQ,wCGsBK,GAAc;AHtBnB,AEclB,ACSA,AERA,YFQK,CERE,ELfe,EGuBtB,CAAW,AERC,KLfkB,AKe9B,CLf+B,IAAT,CGuBtB,CHvBkB,AEcZ,ECSmB,MAAM,CAAC,EDThC,EAAmB,ACSY,CAA/B,ODTA;AFdkB,AFCf,AOeJ,OLjBG,EAEG,IAFH,CAEQ,EAFR,EAGG,KAHH,CAGS,YAAK,aFMQ,KAAK,UAP1B;AEEG,AFFH,AIkBL,ACME,QHtBM,EEgBR,ACMM,CJRI,AIQH,IHtBQ,CAAC,AEgBhB,CCMY,EDNH,EFhBD,CAAc,AGsBf,CAAW,MDNR,EAAD,ACMP,EDN4B,ACMF,GJRL,ICdf;AACD,ADcD,AGEJ,ACME,OH3BA,GEqBI,CHFG,EGEA,CCMF,EDNK,CCMV,CAAS,CJRP,CGEY,EHFI,EAAhB,CGEY,CAAA,UCMd,CAA4B,EDNlB,CAAkB,OCMC,CDND,CAAA,GCMA,EAAsB,MDNtB,CAAY,OAAZ,CAAoB,KAApB,EAA2B,EAA3B,CAAlB,CAAZ;AFfC,AFJE,ACkBF,AGGD,ACKI,MDLJ,GAAG,CAAC,CGJN,KFSW,KAAL,CAAW,MDLf,AGJM,CHIiB,CCKnB,CAAoB,KAApB,AETN,EAAwB,CHIE,IAAD,EAAqB;AJd5C,AIeE,AGJF,YHIU,CGJH,IHIL,CGJU,EHI2B,GGJhC,CHIL,AGJgB,CHIR,KAAR,EGJK,CAAP,2BPXyC;AAAA,AIevC,ACKE,AERL,YHGkB,EJfN,EKoBF,GDLP,GAAqC,CJfE,GIevC,ACKE,CDLa,OAAf;AAAA,ACMC,SAHD,GDHwB,QAAxB,GAAqC,IAArC,CAAwB,QAAxB;AJdA,AKqBD,cLrBK,SAAS,CAAC,OAAV,CAAkB,SAAS,CAAC,IAA5B,KAAqC,CAAzC,EAA4C;AAC1C,AIeF,WGHJ,CPZM,EIeG,KAAL,CAAW,CJfA,CAAC,IAAV,CAAe,CIejB,CAAoB,AGHf,IPZH,COYN,CHG8B,CAAC,AGHL,EHGI,CAA1B;AF5CN,AF8BQ,AChCR,AIqDI,AETA,OL1CJ,ADFA,CCEA,ADFA,GCEA,AK0CS,CFSA,EHnDT,CDFA,CM4CI,CL1CJ,CDFA,CM4CiB,GN5CjB,AIqDI,EETkB,CAAC,GAAN,CAAU,UAAA,IAAI;APXxB,AIcD,ACOH,AEV4B,KFD7B,SDIS,CGHwB,MAAA,CAAA,MAAA,CHG7B,AGH6B,CHGR,KGHQ,CAAA,IHG7B,EAAiC,AGHJ,CAAA,EAAA,EAC1B,CHEmC,GGHT,CAAA,EACtB,KHE0B,CAAiB,QAAjB,CAAjC;AJbD,AOYC,ILjBS,MKiBT,IAAI,EAAE;APxBL,AI0BD,ACQJ,AEXW,SADsB,CFYjC,AEZ6B,IHIpB,MCQT,GAAa,MDRT,CAAqB,KCQP,QDRd,EAAoC,MAAK,KAAL,CAAW,WAAX,CAAuB,QAAvB,EAApC;AJ1BC,AKmCH,AEb2B,OAAd,CAAb,GFaI,IAAI,CAAC,GAAG,CAAC,MAAK,KAAL,CAAW,WAAX,GAAyB,CAA1B,IAA+B,EAA3C,EAA+C,CAAC,GAAG,MAAK,KAAL,CAAW,WAAX,GAAyB,EAA5E,EAAgF,CAAC,EAAjF,EAAqF;ALnClF,AI2BD,ACSA,AEVH,cHCQ,eAAL,CAAqB,ICS+C,GDTpE,EAA8B,CCS2C,IDTzE,CCSoE,CAAW,OAAX,CAAmB,CAAnB,CAApE;ALpCC,AKoCD,YAAQ,EAAR,uBAAQ,EAAR;AH5BF,AFRG,AI4BD,ACQA,YAAY,EDRP,GCQL,MH5BU,GAAZ,EAAuB,CEoBrB,CAAqB,SAArB,CCQY,CDRoB,ICQhC,GDRA;AFpBqB,AFKxB,AKuBG,WERJ,CFQuB,cAAnB,GERK,EAAT,EAAmB,gBFQI,cAAnB;ADNA,ACMA,AEPF,UAAM,EFO+B,EDN9B,AGDG,EFOR,CEPW,KAAK,EHChB,GGDW,CAAW,IAAX,CAAgB,MFOQ,IAAnC,AEP4B,IAAD;ALrBN,AEuBtB,ACKC,AEP2B,OHR7B,KCe2C,GEPM,GFO/C,CEPmD,CAAC,EAAL,KAAW,ELpBpD,AKoBqB,GLrBN,SG4BoB,MAAzC;AH1BD,AEsBF,ACIG,AEP2B,KHX/B,EGWe,CAAb,IFOmD,QAAjD,uBAAiD,QAAjD;AAAA,YAA2D,IAA3D,uBAA2D,IAA3D;ADrBF,AGgBA,UHhBK,AGgBF,IAAH,CHhBA,CGgBQ,EHhBK,KAAb;AJlCJ,AI+BmD,AC0B7C,AENA,OPnDN,CAAA,AOmDM,IAAI,CAAC,CFMA,CLzDX,EOmDM,CPnDN,EOmDkB,CFMZ,GLzDN,AOmDM,mCFOoB,IAAI,GAAG,YAAH,GAAkB,UAD1C,oMAI0B,EAJ1B,gBAIiC,KAJjC,yKAOyE,cAPzE,yNAY+C,IAZ/C,2EAagD,MAbhD,2EAcgD,QAdhD;ADtBH,ACyCE,AExBA,WLrBD,wBAAe,EAAf,EAA6C;AAC3C,AKqBH,aLrBU,KAAK,iBAAL,CAAmC,EAAnC,CAAP;AACD,AG6CD,YAAK,eAAL,CAAqB,WAArB,EAAkC,MAAK,OAAL,EAAlC;;AACA,WD1BM,CC0BD,eAAL,CAAqB,ID1BH,OC0BlB,CD1BM,CC0B4B,CD1BO,KC0BD,CAAC,MAAK,KAAL,CAAW,QAAZ,CAAxC;ADzBA,WFnBA,AEmBI,IAAI,CAAC,GAAG,CAAZ,EAAe,CAAC,GAAG,QAAQ,CAAC,IFnBT,EAAnB,AEmBA,EFnBiD,AEmBb,CAAC,EAArC,EAAyC;AFlBvC,AEmBA,ACyBF,YDzBQ,ACyBH,CH5CI,KAAK,CEmBC,GAAgB,KCyB/B,CAAqB,EDzBkB,CAAC,CAAD,CAArC,MFnBO,AG4CT,CH5CgD,CG4Cd,CH5CzB,CAAP,IG4CsC,CAAC,MAAK,KAAL,CAAW,QAAZ,CAAxC;AH3CC,AEoBC,AG1DN,OAAA,CAAA,KH0DW,AG1DX,GAAA,IH0DM,CG1DN,+CH2DoC,OAAO,CAAC,KAAR,GAAgB,EAD9C,mJAIgB,OAAO,CAAC,IAJxB,uBAIyC,OAAO,CAAC,QAJjD,sEAM+B,OAAO,CAAC,OANvC;ACyBF,YAAK,UAAL;ADfE,ACgBH,KA9BD,ODcQ,OAAO,CAAC,QAAR,CAAiB,MAAjB,GAA0B,CAA9B,EAAiC;AAC/B,eAAK,OAAL,CAAa,KAAK,WAAL,CAAiB,OAAO,CAAC,QAAzB,CAAb;AACD,AClCH,EHT+B,QGS1B,GAAL,GAAW,IAAI,KAAA,CAAA,WAAJ,CAAgB,QAAA,CAAA,QAAhB,CAAX;ADmCC,AClCD,UAAK,KAAL,GAAa,KAAb;AHVF,AGKiD,OHLjD,CAAA,WAAA,GAAA,WAAA;AE8CE,AClCD,aDkCQ,KAAK,OAAL,EAAP;AACD,IFjCY;;EGb2B,MAAA,CAAA;;AAA1C,EDE4C,KCF5C,CDE4C,ACF5C,CDE4C,MCF5C,GAAA,YAAA;AHcI,yBAAY,GAAZ,EAAsB;AAAA,AEZ1B,OAAA,CAAA,OAAA,GAAA,cAAA;;AFY0B,8BACd,GADc;AAErB;;;;WAED,wBAAe,EAAf,EAA6C;AAC3C,aAAO,KAAK,iBAAL,CAAmC,EAAnC,CAAP;AACD;;;WAED,4BAAmB,EAAnB,EAAiD;AAC/C,aAAO,KAAK,qBAAL,CAAuC,EAAvC,CAAP;AACD;;;;EAXgC;;AAAnC,OAAA,CAAA,aAAA,GAAA,aAAA","file":"app.5cec07dd.js","sourceRoot":"..","sourcesContent":["import {RouteInfo} from '../types';\r\nimport View from './view';\r\n\r\nexport default class Router { \r\n  routeTable: RouteInfo[];\r\n  defaultRoute: RouteInfo | null;\r\n\r\n  constructor() {\r\n    window.addEventListener('hashchange', this.route.bind(this)); //윈도우 해시체인지에 route를 연결\r\n\r\n    this.routeTable = [];\r\n    this.defaultRoute = null;\r\n  }\r\n  \r\n  setDefaultPage(page: View): void {\r\n    this.defaultRoute = { path: '', page };\r\n  }\r\n\r\n  addRoutePath(path: string, page: View): void {\r\n    this.routeTable.push({ path, page });\r\n  }\r\n\r\n  route() {\r\n    const routePath = location.hash;\r\n\r\n    if (routePath === '' && this.defaultRoute) {\r\n      this.defaultRoute.page.render();\r\n    }\r\n\r\n    for (const routeInfo of this.routeTable) {\r\n      if (routePath.indexOf(routeInfo.path) >= 0) {\r\n        routeInfo.page.render();\r\n        break;\r\n      }\r\n    }\r\n  }\r\n}\r\n","export default abstract class View {\r\n    private template: string;\r\n    private renderTemplate: string; //원본템플릿 보존을 위해\r\n    private container: HTMLElement;\r\n    private htmlList: string[];\r\n\r\n    constructor(containerId: string, template: string) {\r\n        const containerElement = document.getElementById(containerId);\r\n\r\n        if (!containerElement) {\r\n            throw '최상위 컨테이너가 없어 UI를 진행하지 못합니다.';\r\n        }\r\n\r\n        this.container = containerElement;\r\n        this.template = template;\r\n        this.renderTemplate = template;\r\n        this.htmlList = [];\r\n    }\r\n\r\n    protected updateView(): void {\r\n        this.container.innerHTML = this.renderTemplate;\r\n        this.renderTemplate = this.template;\r\n    }\r\n\r\n    protected addHtml(htmlString: string): void {\r\n        this.htmlList.push(htmlString);\r\n    }\r\n\r\n    protected getHtml(): string {\r\n        const snapshot = this.htmlList.join('');\r\n        this.clearHtmlList(); //최총 호출 이후 HTML 클리어\r\n        return snapshot;\r\n    }\r\n\r\n    protected setTemplateData(key: string, value: string): void {\r\n        this.renderTemplate = this.renderTemplate.replace(`{{__${key}__}}`, value);\r\n    }\r\n\r\n    private clearHtmlList(): void {\r\n        this.htmlList = [];\r\n    }\r\n\r\n    abstract render(...params: string[]): void;\r\n}","import { NewsFeed,NewsDetail } from '../types';\r\n\r\nexport class Api {\r\n    xhr: XMLHttpRequest;\r\n    url: string;\r\n  \r\n    constructor(url: string) {\r\n      this.xhr = new XMLHttpRequest();\r\n      this.url = url;\r\n    }\r\n  \r\n    getRequestWithXHR<AjaxResponse>(cb: (data: AjaxResponse) => void): void {\r\n      this.xhr.open('GET', this.url);\r\n      this.xhr.addEventListener('load', () => {\r\n        cb(JSON.parse(this.xhr.response) as AjaxResponse);\r\n      })\r\n      this.xhr.send();\r\n    }\r\n\r\n    getRequestWithPromise<AjaxResponse>(cb: (data: AjaxResponse) => void): void {\r\n      fetch(this.url)\r\n        .then(response => response.json())\r\n        .then(cb)\r\n        .catch(() => {\r\n          console.error('데이터를 불러오지 못했습니다.');\r\n        })\r\n    }\r\n  }\r\n  \r\n  export class NewsFeedApi extends Api {\r\n    constructor(url: string) {\r\n      super(url);\r\n    }\r\n\r\n    getDataWithXHR(cb: (data: NewsFeed[]) => void): void {\r\n      return this.getRequestWithXHR<NewsFeed[]>(cb);\r\n    }\r\n\r\n    getDataWithPromise(cb: (data: NewsFeed[]) => void): void {\r\n      return this.getRequestWithPromise<NewsFeed[]>(cb);\r\n    }\r\n  }\r\n  \r\n  export class NewsDetailApi extends Api {\r\n    constructor(url:string) {\r\n      super(url);\r\n    }\r\n\r\n    getDataWithXHR(cb: (data: NewsDetail) => void): void {\r\n      return this.getRequestWithXHR<NewsDetail>(cb);\r\n    }\r\n\r\n    getDataWithPromise(cb: (data: NewsDetail) => void): void {\r\n      return this.getRequestWithPromise<NewsDetail>(cb);\r\n    }\r\n  }","export const NEWS_URL = 'https://api.hnpwa.com/v0/news/1.json';\r\nexport const CONTENT_URL = 'https://api.hnpwa.com/v0/item/@id.json';","import View from '../core/view';\r\nimport { NewsDetailApi } from '../core/api';\r\nimport { NewsDetail, NewsComment, NewsStore } from '../types';\r\nimport { CONTENT_URL } from '../config';\r\n\r\nconst template = `\r\n<div class=\"bg-gray-600 min-h-screen pb-8\">\r\n  <div class=\"bg-white text-xl\">\r\n    <div class=\"mx-auto px-4\">\r\n      <div class=\"flex justify-between items-center py-6\">\r\n        <div class=\"flex justify-start\">\r\n          <h1 class=\"font-extrabold\">Hacker News</h1>\r\n        </div>\r\n        <div class=\"items-center justify-end\">\r\n          <a href=\"#/page/{{__currentPage__}}\" class=\"text-gray-500\">\r\n            <i class=\"fa fa-times\"></i>\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"h-full border rounded-xl bg-white m-6 p-4 \">\r\n    <h2>{{__title__}}</h2>\r\n    <div class=\"text-gray-400 h-20\">\r\n      {{__content__}}\r\n    </div>\r\n    {{__comments__}}\r\n  </div>\r\n</div>\r\n`;\r\n\r\nexport default class NewsDetailView extends View {\r\n  private store: NewsStore;\r\n  constructor(containerId: string, store: NewsStore) {\r\n    super(containerId, template);  \r\n\r\n    this.store = store;\r\n  }\r\n\r\n  render = (id: string): void => {\r\n    const api = new NewsDetailApi(CONTENT_URL.replace('@id', id));\r\n    \r\n    api.getDataWithPromise((data: NewsDetail) => {\r\n      const { title, content, comments } = data;\r\n\r\n      this.store.makeRead(Number(id));\r\n      this.setTemplateData('comments', this.makeComment(comments))\r\n      this.setTemplateData('currentPage', this.store.currentPage.toString());\r\n      this.setTemplateData('title', title);\r\n      this.setTemplateData('content', content);\r\n\r\n      this.updateView();  \r\n    })\r\n  }\r\n\r\n  private makeComment(comments: NewsComment[]): string {\r\n    for(let i = 0; i < comments.length; i++) {\r\n      const comment: NewsComment = comments[i];\r\n  \r\n      this.addHtml(`\r\n        <div style=\"padding-left: ${comment.level * 40}px;\" class=\"mt-4\">\r\n          <div class=\"text-gray-400\">\r\n            <i class=\"fa fa-sort-up mr-2\"></i>\r\n            <strong>${comment.user}</strong> ${comment.time_ago}\r\n          </div>\r\n          <p class=\"text-gray-700\">${comment.content}</p>\r\n        </div>      \r\n      `);\r\n  \r\n      if (comment.comments.length > 0) {\r\n        this.addHtml(this.makeComment(comment.comments));\r\n      }\r\n    }\r\n  \r\n    return this.getHtml();\r\n  }  \r\n}","import View from '../core/view';\r\nimport { NewsFeedApi } from '../core/api';\r\nimport { NewsFeed, NewsStore } from '../types';\r\nimport { NEWS_URL } from '../config';\r\n\r\nconst template: string = `\r\n<div class=\"bg-gray-600 min-h-screen\">\r\n  <div class=\"bg-white text-xl\">\r\n    <div class=\"mx-auto px-4\">\r\n      <div class=\"flex justify-between items-center py-6\">\r\n        <div class=\"flex justify-start\">\r\n          <h1 class=\"font-extrabold\">Hacker News</h1>\r\n        </div>\r\n        <div class=\"items-center justify-end\">\r\n          <a href=\"#/page/{{__prev_page__}}\" class=\"text-gray-500\">\r\n            Previous\r\n          </a>\r\n          <a href=\"#/page/{{__next_page__}}\" class=\"text-gray-500 ml-4\">\r\n            Next\r\n          </a>\r\n        </div>\r\n      </div> \r\n    </div>\r\n  </div>\r\n  <div class=\"p-4 text-2xl text-gray-700\">\r\n    {{__news_feed__}}        \r\n  </div>\r\n</div>\r\n`;\r\n\r\nexport default class NewsFeedView extends View {\r\n  private api: NewsFeedApi;\r\n  private store: NewsStore;\r\n  \r\n  constructor(containerId: string, store: NewsStore) {\r\n\r\n    super(containerId, template);\r\n\r\n    this.api = new NewsFeedApi(NEWS_URL);\r\n    this.store = store;\r\n  \r\n  }\r\n  \r\n  render = (page: string = '1' ): void => {\r\n    this.store.currentPage = Number(page);\r\n\r\n    if (!this.store.hasFeeds) {\r\n      this.api.getDataWithPromise((feeds: NewsFeed[]) => {\r\n        this.store.setFeeds(feeds);\r\n        this.renderView();\r\n      })\r\n    }\r\n\r\n    this.renderView();\r\n  }\r\n\r\n  renderView = () => {\r\n    for(let i = (this.store.currentPage - 1) * 10; i < this.store.currentPage * 10; i++) {\r\n      const { id, title, comments_count, user, points, time_ago, read } = this.store.getFeed(i);\r\n\r\n      this.addHtml(`\r\n        <div class=\"p-6 ${read ? 'bg-red-500' : 'bg-white'} mt-6 rounded-lg shadow-md transition-colors duration-500 hover:bg-green-100\">\r\n          <div class=\"flex\">\r\n            <div class=\"flex-auto\">\r\n              <a href=\"#/show/${id}\">${title}</a>  \r\n            </div>\r\n            <div class=\"text-center text-sm\">\r\n              <div class=\"w-10 text-white bg-green-300 rounded-lg px-0 py-2\">${comments_count}</div>\r\n            </div>\r\n          </div>\r\n          <div class=\"flex mt-3\">\r\n            <div class=\"grid grid-cols-3 text-sm text-gray-500\">\r\n              <div><i class=\"fas fa-user mr-1\"></i>${user}</div>\r\n              <div><i class=\"fas fa-heart mr-1\"></i>${points}</div>\r\n              <div><i class=\"far fa-clock mr-1\"></i>${time_ago}</div>\r\n            </div>  \r\n          </div>\r\n        </div>    \r\n      `);\r\n    }\r\n  \r\n    this.setTemplateData('news_feed', this.getHtml());\r\n    this.setTemplateData('prev_page', String(this.store.prevPage));\r\n    this.setTemplateData('next_page', String(this.store.nextPage));\r\n  \r\n    this.updateView();  \r\n  }\r\n}","\r\nexport { default as NewsDetailView } from './news-detail-view';\r\nexport { default as NewsFeedView} from './news-feed-view';","import { NewsFeed, NewsStore } from \"./types\";\r\n\r\nexport class Store implements NewsStore {\r\n  private feeds : NewsFeed[];\r\n  private _currentPage: number;\r\n\r\n  constructor() {\r\n    this.feeds = [];\r\n    this._currentPage = 1;\r\n  }\r\n\r\n  get currentPage() { //외부에서는 함수가 아닌 속성값으로 사용될 수 있도록\r\n    return this._currentPage;\r\n  }\r\n\r\n  set currentPage(page: number) {\r\n    this._currentPage = page;\r\n  }\r\n\r\n  get nextPage(): number {\r\n    return this._currentPage + 1;\r\n  }\r\n\r\n  get prevPage(): number {\r\n    return this._currentPage > 1 ? this._currentPage - 1 : 1;\r\n  }\r\n\r\n  get numberOfFeed(): number {\r\n    return this.feeds.length;\r\n  }\r\n\r\n  get hasFeeds(): boolean {\r\n    return this.feeds.length > 0;\r\n  }\r\n\r\n  getAllFeeds(): NewsFeed[] {\r\n    return this.feeds;\r\n  } \r\n\r\n  getFeed(position: number): NewsFeed {\r\n    return this.feeds[position];\r\n  } \r\n\r\n  setFeeds(feeds: NewsFeed[]) : void{\r\n    this.feeds = feeds.map(feed => ({\r\n      ...feed, //스프레드 오퍼레이터 더 알아보기\r\n      read: false\r\n    }))\r\n  }\r\n\r\n  makeRead(id: number): void {\r\n    const feed = this.feeds.find((feed: NewsFeed) => feed.id ===id);\r\n\r\n    if(feed){\r\n      feed.read = true;\r\n    }\r\n  }\r\n}","import Router from './core/router';\r\nimport { NewsDetailView, NewsFeedView }from './page';\r\nimport { Store } from './store';\r\n\r\nconst store = new Store();\r\n\r\nconst router: Router = new Router();\r\nconst newsFeedView = new NewsFeedView('root', store);\r\nconst newsDetailView = new NewsDetailView('root', store);\r\n\r\nrouter.setDefaultPage(newsFeedView);\r\n\r\nrouter.addRoutePath('/page/', newsFeedView);\r\nrouter.addRoutePath('/show/', newsDetailView);\r\n\r\nrouter.route(); //최초 실행시엔 해시체인지가 발생하지 않으므로 route를 수동동작\r\n"]}